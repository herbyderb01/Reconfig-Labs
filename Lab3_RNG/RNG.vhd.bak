library ieee;
use ieee.std_logic_1164.all;
use ieee.numeric_std.all;

entity RNG is
    generic (
        N : integer := 8; -- Output number size
        M : integer := 8  -- LFSR bit width
    );
    port (
        clk : in std_logic;
        en  : in std_logic;
        rst : in std_logic;
        rn  : out std_logic_vector(N-1 downto 0) -- Random number output
    );
end RNG;

architecture behavioral of RNG is
    component LFSR
        generic (
            M : integer := 8  -- LFSR bit width
        );
        port (
            clk   : in std_logic;
            en    : in std_logic;
            rst   : in std_logic;
            data  : out std_logic_vector(M-1 downto 0)
        );
    end component LFSR;

    signal lfsr_out : std_logic_vector(M-1 downto 0);
    
begin
    -- Instantiate the LFSR
    LFSR1: LFSR
        generic map (
            M => 8
        )
        port map (
            clk  => clk,
            en   => en,
            rst  => rst,
            data => lfsr_out
        );

    -- Connect the LFSR output to the random number output
    rn <= lfsr_out;

end architecture behavioral;
